{"version":3,"sources":["webpack:///src/app/features/customer/components/customer-body/modules/customer-author/components/customer-author/customer-author.component.html","webpack:///src/app/features/customer/components/customer-body/modules/customer-author/customer-author.module.ts","webpack:///src/app/core/utils/URL/customer-url/customer-author/customer-url-author.ts","webpack:///src/app/features/customer/components/customer-body/modules/customer-author/customer-author-routing.module.ts","webpack:///src/app/features/customer/components/customer-body/modules/customer-author/components/customer-author/customer-author.component.ts","webpack:///src/app/features/customer/components/customer-body/modules/customer-author/components/customer-author/customer-author.component.less","webpack:///src/app/core/services/customer/author/author.service.ts"],"names":["CustomerAuthorModule","declarations","imports","CustomerUrlAuthor","authorId","customerUrl","providedIn","routes","path","component","data","title","breadcrumb","CustomerAuthorRoutingModule","forChild","exports","CustomerAuthorComponent","authorService","route","notificationService","destroy$","appErrorHandler","isLoading","isNotHaveData","authorResponse","snapshot","paramMap","get","console","log","getAuthor","pipe","subscribe","result","isSuccessed","resultObj","message","showErrorNotification","error","handleErrorWithNoti","selector","template","providers","AuthorService","http","customerUrlAuthor"],"mappings":"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","file":"components-customer-body-modules-customer-author-customer-author-module-es5.js","sourcesContent":["export default \"<nz-skeleton *ngIf=\\\"isLoading; else completedLoading\\\" [nzLoading]=\\\"isLoading\\\" [nzActive]=\\\"true\\\"></nz-skeleton>\\r\\n<ng-template #completedLoading>\\r\\n\\t<nz-empty style=\\\"margin-top: 50px;\\\" *ngIf=\\\"isNotHaveData; else haveData\\\">\\r\\n\\t\\t<span> Không Tìm Thấy Tác Gỉa </span>\\r\\n\\t</nz-empty>\\r\\n\\t<ng-template #haveData>\\r\\n\\t\\t<div class=\\\"grid wide\\\">\\r\\n\\t\\t\\t<nz-page-header>\\r\\n\\t\\t\\t\\t<!--breadcrumb-->\\r\\n\\t\\t\\t\\t<nz-breadcrumb nz-page-header-breadcrumb [nzAutoGenerate]=\\\"true\\\"></nz-breadcrumb>\\r\\n\\t\\t\\t\\t<!--title-->\\r\\n\\t\\t\\t\\t<nz-page-header-title>{{authorResponse.authorName}}</nz-page-header-title>\\r\\n\\t\\t\\t\\t<!--subtitle-->\\r\\n\\t\\t\\t\\t<nz-page-header-subtitle></nz-page-header-subtitle>\\r\\n\\t\\t\\t\\t<!--content-->\\r\\n\\t\\t\\t\\t<nz-page-header-content>\\r\\n\\t\\t\\t\\t\\t<div innerHTML=\\\"{{authorResponse.description}}\\\"></div>\\r\\n\\t\\t\\t\\t</nz-page-header-content>\\r\\n\\t\\t\\t</nz-page-header>\\r\\n\\t\\t</div>\\r\\n\\t</ng-template>\\r\\n</ng-template>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CustomerAuthorRoutingModule } from './customer-author-routing.module';\r\nimport { CustomerAuthorComponent } from './components/customer-author/customer-author.component';\r\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { FormsModule, MaterialModule, NgZorroAntdModule, ReactiveFormsModule } from 'src/app/core/module/core.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [CustomerAuthorComponent],\r\n  imports: [\r\n    CommonModule,\r\n    CustomerAuthorRoutingModule,\r\n    FormsModule,\r\n\t\tReactiveFormsModule,\r\n\t\tMaterialModule,\r\n\t\tNgZorroAntdModule,\r\n    TranslateModule,\r\n\t\tInfiniteScrollModule,\r\n  ]\r\n})\r\nexport class CustomerAuthorModule { }\r\n","import {Injectable} from '@angular/core';\r\nimport {CustomerUrlBase} from './../customer-url-base';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class CustomerUrlAuthor extends CustomerUrlBase {\r\n\tgetAuthor(authorId: number) {\r\n\t\treturn this.customerUrl + '/author/' + authorId;\r\n\t}\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {CustomerAuthorComponent} from './components/customer-author/customer-author.component';\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: ':authorId',\r\n\t\tcomponent: CustomerAuthorComponent,\r\n\t\tdata: {\r\n\t\t\ttitle: 'Customer-app.body.author.title',\r\n\t\t\tbreadcrumb: 'Author'\r\n\t\t}\r\n\t}\r\n];\r\n\r\n@NgModule({\r\n\timports: [RouterModule.forChild(routes)],\r\n\texports: [RouterModule]\r\n})\r\nexport class CustomerAuthorRoutingModule {}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {takeUntil} from 'rxjs/internal/operators/takeUntil';\r\nimport {AppErrorHandler} from 'src/app/core/error-handler/app-error-handler.service';\r\nimport {AuthorResponseVM} from 'src/app/core/models/customer/author/authorResponse.ViewModel';\r\nimport {NotificationService} from 'src/app/core/notification/notifications/customer/notification.service';\r\nimport {DestroyService} from 'src/app/core/services/comon-services/destroy-service/destroy.service';\r\nimport {AuthorService} from 'src/app/core/services/customer/author/author.service';\r\n\r\n@Component({\r\n\tselector: 'app-customer-author',\r\n\ttemplateUrl: './customer-author.component.html',\r\n\tstyleUrls: ['./customer-author.component.less'],\r\n\tproviders: [DestroyService]\r\n})\r\nexport class CustomerAuthorComponent implements OnInit {\r\n\tisLoading = true; //skelton\r\n\tisNotHaveData: boolean = false;\r\n\tauthorId: number = 1;\r\n\tauthorResponse: AuthorResponseVM = {} as AuthorResponseVM;\r\n\tconstructor(\r\n\t\tprivate authorService: AuthorService,\r\n\t\tprivate route: ActivatedRoute,\r\n\t\tprivate notificationService: NotificationService,\r\n\t\tprivate destroy$: DestroyService,\r\n\t\tprivate appErrorHandler: AppErrorHandler\r\n\t) {}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.isLoading = true;\r\n\t\tif (this.route.snapshot.paramMap.get('authorId')) {\r\n\t\t\tthis.authorId = +this.route.snapshot.paramMap.get('authorId');\r\n\t\t\tconsole.log(this.authorId);\r\n\t\t\tthis.getAuthor(this.authorId);\r\n\t\t}\r\n\t}\r\n\tgetAuthor(authorId: number) {\r\n\t\tthis.authorService\r\n\t\t\t.getAuthor(authorId)\r\n\t\t\t.pipe(takeUntil(this.destroy$))\r\n\t\t\t.subscribe(\r\n\t\t\t\t(result) => {\r\n\t\t\t\t\tconsole.log(result);\r\n\t\t\t\t\tif (result.isSuccessed) {\r\n\t\t\t\t\t\tif (result.resultObj) {\r\n\t\t\t\t\t\t\tconsole.log(result);\r\n\t\t\t\t\t\t\tthis.authorResponse = result.resultObj;\r\n\t\t\t\t\t\t\tthis.isLoading = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.isNotHaveData = true;\r\n\t\t\t\t\t\tif (result.message) {\r\n\t\t\t\t\t\t\tthis.notificationService.showErrorNotification(result.message);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t(error) => {\r\n\t\t\t\t\tthis.isNotHaveData = true;\r\n\t\t\t\t\tthis.appErrorHandler.handleErrorWithNoti(error);\r\n\t\t\t\t},\r\n\t\t\t\t() => {}\r\n\t\t\t);\r\n\t}\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjdXN0b21lci1hdXRob3IuY29tcG9uZW50Lmxlc3MifQ== */\";","import {Observable} from 'rxjs';\nimport {ApiResult} from './../../../models/common/ApiResult';\nimport {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {CustomerUrlAuthor} from 'src/app/core/utils/URL/customer-url/customer-author/customer-url-author';\nimport {AuthorResponseVM} from 'src/app/core/models/customer/author/authorResponse.ViewModel';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class AuthorService {\n\tconstructor(private http: HttpClient, private customerUrlAuthor: CustomerUrlAuthor) {}\n\tgetAuthor(authorId: number): Observable<ApiResult<AuthorResponseVM>> {\n\t\treturn this.http.get<ApiResult<AuthorResponseVM>>(this.customerUrlAuthor.getAuthor(authorId));\n\t}\n}\n"]}